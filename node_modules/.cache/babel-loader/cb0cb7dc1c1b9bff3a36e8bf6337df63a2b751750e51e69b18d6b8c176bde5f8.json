{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nexport function useActivityLogs() {\n  _s();\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    async function fetchLogs() {\n      try {\n        const res = await fetch('https://forum-gen-backend-production.up.railway.app/api/activity', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setLogs(data);\n      } catch (err) {\n        console.error('Failed to fetch activity logs:', err);\n      }\n    }\n    fetchLogs();\n  }, []);\n  return logs;\n}\n_s(useActivityLogs, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");","map":{"version":3,"names":["useEffect","useState","useActivityLogs","_s","logs","setLogs","fetchLogs","res","fetch","credentials","data","json","err","console","error"],"sources":["/Users/matthewconrad/Desktop/forumgen-admin-ui/src/hooks/useActivityLogs.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport function useActivityLogs() {\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    async function fetchLogs() {\n      try {\n        const res = await fetch('https://forum-gen-backend-production.up.railway.app/api/activity', {\n          credentials: 'include',\n        });\n        const data = await res.json();\n        setLogs(data);\n      } catch (err) {\n        console.error('Failed to fetch activity logs:', err);\n      }\n    }\n\n    fetchLogs();\n  }, []);\n\n  return logs;\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,eAAeM,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kEAAkE,EAAE;UAC1FC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BN,OAAO,CAACK,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;MACtD;IACF;IAEAN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,IAAI;AACb;AAACD,EAAA,CApBeD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}