{"ast":null,"code":"var _jsxFileName = \"/Users/matthewconrad/Desktop/forumgen-admin-ui/src/components/ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute() {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    // No token at all\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  try {\n    // Decode payload to inspect roles\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const roles = payload.role || payload.roles || [];\n    if (!roles.includes('admin')) {\n      // Not an admin\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n  } catch {\n    // Malformed token\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // All good, render nested routes\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","ProtectedRoute","token","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","payload","JSON","parse","atob","split","roles","role","includes","_c","$RefreshReg$"],"sources":["/Users/matthewconrad/Desktop/forumgen-admin-ui/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n\nexport default function ProtectedRoute() {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    // No token at all\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  try {\n    // Decode payload to inspect roles\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const roles = payload.role || payload.roles || [];\n    if (!roles.includes('admin')) {\n      // Not an admin\n      return <Navigate to=\"/login\" replace />;\n    }\n  } catch {\n    // Malformed token\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // All good, render nested routes\n  return <Outlet />;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,cAAcA,CAAA,EAAG;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACV;IACA,oBAAOF,OAAA,CAACH,QAAQ;MAACQ,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,IAAI;IACF;IACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACZ,KAAK,CAACa,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMC,KAAK,GAAGL,OAAO,CAACM,IAAI,IAAIN,OAAO,CAACK,KAAK,IAAI,EAAE;IACjD,IAAI,CAACA,KAAK,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE;MAC5B;MACA,oBAAOlB,OAAA,CAACH,QAAQ;QAACQ,EAAE,EAAC,QAAQ;QAACC,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACzC;EACF,CAAC,CAAC,MAAM;IACN;IACA,oBAAOV,OAAA,CAACH,QAAQ;MAACQ,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,oBAAOV,OAAA,CAACF,MAAM;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB;AAACS,EAAA,GAtBuBlB,cAAc;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}