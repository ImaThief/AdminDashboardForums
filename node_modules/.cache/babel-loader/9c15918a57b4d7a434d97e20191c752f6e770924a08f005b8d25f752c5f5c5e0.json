{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from 'react';\nfunction formatUptime(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  return `${hours}h ${minutes}m`;\n}\nexport function useStats() {\n  _s();\n  const [stats, setStats] = useState({\n    users: null,\n    projects: null,\n    uptime: null,\n    systemStatus: null\n  });\n  const fetchStats = useCallback(async () => {\n    try {\n      var _statusData$uptime;\n      const token = localStorage.getItem('token');\n      const [usersRes, projectRes, statusRes] = await Promise.all([fetch('https://forum-gen-backend-production.up.railway.app/api/users', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), fetch('https://forum-gen-backend-production.up.railway.app/api/projects', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), fetch('https://forum-gen-backend-production.up.railway.app/api/status', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      if (!usersRes.ok || !projectRes.ok || !statusRes.ok) {\n        throw new Error('One or more API calls failed');\n      }\n      const usersData = await usersRes.json();\n      const projectsData = await projectRes.json();\n      const statusData = await statusRes.json();\n      const uptimeFormatted = formatUptime((_statusData$uptime = statusData.uptime) !== null && _statusData$uptime !== void 0 ? _statusData$uptime : 0);\n      setStats({\n        users: Array.isArray(usersData) ? usersData.length : '-',\n        projects: Array.isArray(projectsData) ? projectsData.length : '-',\n        uptime: uptimeFormatted,\n        systemStatus: statusData.dbHealthy ? 'Operational' : 'Down'\n      });\n    } catch (err) {\n      console.error('Failed to fetch stats:', err);\n      setStats({\n        users: '-',\n        projects: '-',\n        uptime: '-',\n        systemStatus: 'Down'\n      });\n    }\n  }, []);\n  useEffect(() => {\n    fetchStats();\n  }, [fetchStats]);\n  return {\n    ...stats,\n    refresh: fetchStats\n  };\n}\n_s(useStats, \"Dqlxud5SxMHMC/9mX1orgWClfAI=\");","map":{"version":3,"names":["useEffect","useState","useCallback","formatUptime","seconds","hours","Math","floor","minutes","useStats","_s","stats","setStats","users","projects","uptime","systemStatus","fetchStats","_statusData$uptime","token","localStorage","getItem","usersRes","projectRes","statusRes","Promise","all","fetch","headers","Authorization","ok","Error","usersData","json","projectsData","statusData","uptimeFormatted","Array","isArray","length","dbHealthy","err","console","error","refresh"],"sources":["/Users/matthewconrad/Desktop/forumgen-admin-ui/src/hooks/useStats.js"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\n\nfunction formatUptime(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  return `${hours}h ${minutes}m`;\n}\n\nexport function useStats() {\n  const [stats, setStats] = useState({\n    users: null,\n    projects: null,\n    uptime: null,\n    systemStatus: null,\n  });\n\n  const fetchStats = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const [usersRes, projectRes, statusRes] = await Promise.all([\n        fetch('https://forum-gen-backend-production.up.railway.app/api/users', {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n        fetch('https://forum-gen-backend-production.up.railway.app/api/projects', {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n        fetch('https://forum-gen-backend-production.up.railway.app/api/status', {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n      ]);\n\n      if (!usersRes.ok || !projectRes.ok || !statusRes.ok) {\n        throw new Error('One or more API calls failed');\n      }\n\n      const usersData = await usersRes.json();\n      const projectsData = await projectRes.json();\n      const statusData = await statusRes.json();\n\n      const uptimeFormatted = formatUptime(statusData.uptime ?? 0);\n\n      setStats({\n        users: Array.isArray(usersData) ? usersData.length : '-',\n        projects: Array.isArray(projectsData) ? projectsData.length : '-',\n        uptime: uptimeFormatted,\n        systemStatus: statusData.dbHealthy ? 'Operational' : 'Down',\n      });\n    } catch (err) {\n      console.error('Failed to fetch stats:', err);\n      setStats({ users: '-', projects: '-', uptime: '-', systemStatus: 'Down' });\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchStats();\n  }, [fetchStats]);\n\n  return { ...stats, refresh: fetchStats };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}