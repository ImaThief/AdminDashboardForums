{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nfunction formatUptime(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  return `${hours}h ${minutes}m`;\n}\nexport function useStats() {\n  _s();\n  const [stats, setStats] = useState({\n    users: null,\n    forums: null,\n    uptime: null,\n    systemStatus: null\n  });\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        var _status$uptime;\n        const token = localStorage.getItem('token');\n        const [usersRes, projectRes, statusRes] = await Promise.all([fetch('https://forum-gen-backend-production.up.railway.app/api/users', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }), fetch('https://forum-gen-backend-production.up.railway.app/api/projects'), fetch('https://forum-gen-backend-production.up.railway.app/api/status')]);\n        const users = await usersRes.json();\n        const projects = await projectRes.json();\n        const status = await statusRes.json();\n        const uptimeInSeconds = (_status$uptime = status === null || status === void 0 ? void 0 : status.uptime) !== null && _status$uptime !== void 0 ? _status$uptime : 0;\n        const uptimeFormatted = formatUptime(uptimeInSeconds);\n        setStats({\n          users: users.length,\n          projects: projects.length,\n          uptime: uptimeFormatted,\n          systemStatus: status !== null && status !== void 0 && status.healthy ? 'Operational' : 'Down'\n        });\n      } catch (err) {\n        console.error('Failed to fetch stats:', err);\n        setStats({\n          users: '-',\n          projects: '-',\n          uptime: '-',\n          systemStatus: 'Down'\n        });\n      }\n    };\n    fetchStats();\n  }, []);\n  return stats;\n}\n_s(useStats, \"DbvfFYTTMArFCoIPi+seANyccCg=\");","map":{"version":3,"names":["useEffect","useState","formatUptime","seconds","hours","Math","floor","minutes","useStats","_s","stats","setStats","users","forums","uptime","systemStatus","fetchStats","_status$uptime","token","localStorage","getItem","usersRes","projectRes","statusRes","Promise","all","fetch","headers","json","projects","status","uptimeInSeconds","uptimeFormatted","length","healthy","err","console","error"],"sources":["/Users/matthewconrad/Desktop/forumgen-admin-ui/src/hooks/useStats.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction formatUptime(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  return `${hours}h ${minutes}m`;\n}\n\nexport function useStats() {\n  const [stats, setStats] = useState({\n    users: null,\n    forums: null,\n    uptime: null,\n    systemStatus: null,\n  });\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const [usersRes, projectRes, statusRes] = await Promise.all([\n            fetch('https://forum-gen-backend-production.up.railway.app/api/users', {\n                headers: {\n                  'Authorization': `Bearer ${token}`,\n                },\n              }),\n          fetch('https://forum-gen-backend-production.up.railway.app/api/projects'),\n          fetch('https://forum-gen-backend-production.up.railway.app/api/status'),\n        ]);\n\n        const users = await usersRes.json();\n        const projects = await projectRes.json();\n        const status = await statusRes.json();\n\n        const uptimeInSeconds = status?.uptime ?? 0;\n        const uptimeFormatted = formatUptime(uptimeInSeconds);\n\n        setStats({\n          users: users.length,\n          projects: projects.length,\n          uptime: uptimeFormatted,\n          systemStatus: status?.healthy ? 'Operational' : 'Down',\n        });\n      } catch (err) {\n        console.error('Failed to fetch stats:', err);\n        setStats({\n          users: '-',\n          projects: '-',\n          uptime: '-',\n          systemStatus: 'Down',\n        });\n      }\n    };\n\n    fetchStats();\n  }, []);\n\n  return stats;\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,YAAYA,CAACC,OAAO,EAAE;EAC7B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,IAAI,CAAC;EACxC,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,OAAO,GAAG,IAAI,GAAI,EAAE,CAAC;EACjD,OAAO,GAAGC,KAAK,KAAKG,OAAO,GAAG;AAChC;AAEA,OAAO,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IACjCW,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE,IAAI;IACZC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QAAA,IAAAC,cAAA;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAM,CAACC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACxDC,KAAK,CAAC,+DAA+D,EAAE;UACnEC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUT,KAAK;UAClC;QACF,CAAC,CAAC,EACNQ,KAAK,CAAC,kEAAkE,CAAC,EACzEA,KAAK,CAAC,gEAAgE,CAAC,CACxE,CAAC;QAEF,MAAMd,KAAK,GAAG,MAAMS,QAAQ,CAACO,IAAI,CAAC,CAAC;QACnC,MAAMC,QAAQ,GAAG,MAAMP,UAAU,CAACM,IAAI,CAAC,CAAC;QACxC,MAAME,MAAM,GAAG,MAAMP,SAAS,CAACK,IAAI,CAAC,CAAC;QAErC,MAAMG,eAAe,IAAAd,cAAA,GAAGa,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEhB,MAAM,cAAAG,cAAA,cAAAA,cAAA,GAAI,CAAC;QAC3C,MAAMe,eAAe,GAAG9B,YAAY,CAAC6B,eAAe,CAAC;QAErDpB,QAAQ,CAAC;UACPC,KAAK,EAAEA,KAAK,CAACqB,MAAM;UACnBJ,QAAQ,EAAEA,QAAQ,CAACI,MAAM;UACzBnB,MAAM,EAAEkB,eAAe;UACvBjB,YAAY,EAAEe,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEI,OAAO,GAAG,aAAa,GAAG;QAClD,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;QAC5CxB,QAAQ,CAAC;UACPC,KAAK,EAAE,GAAG;UACViB,QAAQ,EAAE,GAAG;UACbf,MAAM,EAAE,GAAG;UACXC,YAAY,EAAE;QAChB,CAAC,CAAC;MACJ;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAON,KAAK;AACd;AAACD,EAAA,CAlDeD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}