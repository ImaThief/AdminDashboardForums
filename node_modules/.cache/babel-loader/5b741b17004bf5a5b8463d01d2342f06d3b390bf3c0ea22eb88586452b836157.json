{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nexport function useActivityLogs() {\n  _s();\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    async function fetchLogs() {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.warn('No JWT found – are you logged in?');\n        setLogs([]);\n        return;\n      }\n      try {\n        const res = await fetch('https://forum-gen-backend-production.up.railway.app/api/activity', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) {\n          throw new Error(`Activity fetch failed (${res.status})`);\n        }\n        const data = await res.json();\n        setLogs(Array.isArray(data) ? data : []);\n      } catch (err) {\n        console.error('Failed to fetch activity logs:', err);\n        setLogs([]);\n      }\n    }\n    fetchLogs();\n  }, []);\n  return logs;\n}\n_s(useActivityLogs, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");","map":{"version":3,"names":["useEffect","useState","useActivityLogs","_s","logs","setLogs","fetchLogs","token","localStorage","getItem","console","warn","res","fetch","headers","Authorization","ok","Error","status","data","json","Array","isArray","err","error"],"sources":["/Users/matthewconrad/Desktop/forumgen-admin-ui/src/hooks/useActivityLogs.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport function useActivityLogs() {\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    async function fetchLogs() {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.warn('No JWT found – are you logged in?');\n        setLogs([]);\n        return;\n      }\n\n      try {\n        const res = await fetch(\n          'https://forum-gen-backend-production.up.railway.app/api/activity',\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        if (!res.ok) {\n          throw new Error(`Activity fetch failed (${res.status})`);\n        }\n\n        const data = await res.json();\n        setLogs(Array.isArray(data) ? data : []);\n      } catch (err) {\n        console.error('Failed to fetch activity logs:', err);\n        setLogs([]);\n      }\n    }\n\n    fetchLogs();\n  }, []);\n\n  return logs;\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,eAAeM,SAASA,CAAA,EAAG;MACzB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVG,OAAO,CAACC,IAAI,CAAC,mCAAmC,CAAC;QACjDN,OAAO,CAAC,EAAE,CAAC;QACX;MACF;MAEA,IAAI;QACF,MAAMO,GAAG,GAAG,MAAMC,KAAK,CACrB,kEAAkE,EAClE;UACEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUR,KAAK;UAChC;QACF,CACF,CAAC;QAED,IAAI,CAACK,GAAG,CAACI,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAAC,0BAA0BL,GAAG,CAACM,MAAM,GAAG,CAAC;QAC1D;QAEA,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;QAC7Bf,OAAO,CAACgB,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC;MAC1C,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZb,OAAO,CAACc,KAAK,CAAC,gCAAgC,EAAED,GAAG,CAAC;QACpDlB,OAAO,CAAC,EAAE,CAAC;MACb;IACF;IAEAC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,IAAI;AACb;AAACD,EAAA,CAtCeD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}