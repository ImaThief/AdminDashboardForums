{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nfunction formatUptime(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  return `${hours}h ${minutes}m`;\n}\nexport function useStats() {\n  _s();\n  const [stats, setStats] = useState({\n    users: null,\n    projects: null,\n    uptime: null,\n    systemStatus: null\n  });\n  useEffect(() => {\n    const fetchStats = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        var _status$uptime;\n        const [usersRes, projectRes, statusRes] = await Promise.all([fetch('https://forum-gen-backend-production.up.railway.app/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), fetch('https://forum-gen-backend-production.up.railway.app/api/projects'), fetch('https://forum-gen-backend-production.up.railway.app/api/status')]);\n        if (!usersRes.ok || !projectRes.ok || !statusRes.ok) {\n          throw new Error('One or more API calls failed');\n        }\n        const users = await usersRes.json();\n        const projects = await projectRes.json();\n        const status = await statusRes.json();\n        const uptimeFormatted = formatUptime((_status$uptime = status === null || status === void 0 ? void 0 : status.uptime) !== null && _status$uptime !== void 0 ? _status$uptime : 0);\n        setStats({\n          users: Array.isArray(users) ? users.length : '-',\n          projects: Array.isArray(projects) ? projects.length : '-',\n          uptime: uptimeFormatted,\n          systemStatus: status !== null && status !== void 0 && status.healthy ? 'Operational' : 'Down'\n        });\n      } catch (err) {\n        console.error('Failed to fetch stats:', err);\n        setStats({\n          users: '-',\n          projects: '-',\n          uptime: '-',\n          systemStatus: 'Down'\n        });\n      }\n    };\n    fetchStats();\n  }, []);\n  return stats;\n}\n_s(useStats, \"zgrzdrn7tA9jUxAjxcLyTkA/vNs=\");","map":{"version":3,"names":["useEffect","useState","formatUptime","seconds","hours","Math","floor","minutes","useStats","_s","stats","setStats","users","projects","uptime","systemStatus","fetchStats","token","localStorage","getItem","_status$uptime","usersRes","projectRes","statusRes","Promise","all","fetch","headers","Authorization","ok","Error","json","status","uptimeFormatted","Array","isArray","length","healthy","err","console","error"],"sources":["/Users/matthewconrad/Desktop/forumgen-admin-ui/src/hooks/useStats.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction formatUptime(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  return `${hours}h ${minutes}m`;\n}\n\nexport function useStats() {\n  const [stats, setStats] = useState({\n    users: null,\n    projects: null,\n    uptime: null,\n    systemStatus: null,\n  });\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      const token = localStorage.getItem('token');\n\n      try {\n        const [usersRes, projectRes, statusRes] = await Promise.all([\n          fetch('https://forum-gen-backend-production.up.railway.app/api/users', {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }),\n          fetch('https://forum-gen-backend-production.up.railway.app/api/projects'),\n          fetch('https://forum-gen-backend-production.up.railway.app/api/status'),\n        ]);\n\n        if (!usersRes.ok || !projectRes.ok || !statusRes.ok) {\n          throw new Error('One or more API calls failed');\n        }\n\n        const users = await usersRes.json();\n        const projects = await projectRes.json();\n        const status = await statusRes.json();\n\n        const uptimeFormatted = formatUptime(status?.uptime ?? 0);\n\n        setStats({\n          users: Array.isArray(users) ? users.length : '-',\n          projects: Array.isArray(projects) ? projects.length : '-',\n          uptime: uptimeFormatted,\n          systemStatus: status?.healthy ? 'Operational' : 'Down',\n        });\n      } catch (err) {\n        console.error('Failed to fetch stats:', err);\n        setStats({\n          users: '-',\n          projects: '-',\n          uptime: '-',\n          systemStatus: 'Down',\n        });\n      }\n    };\n\n    fetchStats();\n  }, []);\n\n  return stats;\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,YAAYA,CAACC,OAAO,EAAE;EAC7B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,IAAI,CAAC;EACxC,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,OAAO,GAAG,IAAI,GAAI,EAAE,CAAC;EACjD,OAAO,GAAGC,KAAK,KAAKG,OAAO,GAAG;AAChC;AAEA,OAAO,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IACjCW,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI;QAAA,IAAAC,cAAA;QACF,MAAM,CAACC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC1DC,KAAK,CAAC,+DAA+D,EAAE;UACrEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUX,KAAK;UAChC;QACF,CAAC,CAAC,EACFS,KAAK,CAAC,kEAAkE,CAAC,EACzEA,KAAK,CAAC,gEAAgE,CAAC,CACxE,CAAC;QAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,IAAI,CAACP,UAAU,CAACO,EAAE,IAAI,CAACN,SAAS,CAACM,EAAE,EAAE;UACnD,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QAEA,MAAMlB,KAAK,GAAG,MAAMS,QAAQ,CAACU,IAAI,CAAC,CAAC;QACnC,MAAMlB,QAAQ,GAAG,MAAMS,UAAU,CAACS,IAAI,CAAC,CAAC;QACxC,MAAMC,MAAM,GAAG,MAAMT,SAAS,CAACQ,IAAI,CAAC,CAAC;QAErC,MAAME,eAAe,GAAG/B,YAAY,EAAAkB,cAAA,GAACY,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAElB,MAAM,cAAAM,cAAA,cAAAA,cAAA,GAAI,CAAC,CAAC;QAEzDT,QAAQ,CAAC;UACPC,KAAK,EAAEsB,KAAK,CAACC,OAAO,CAACvB,KAAK,CAAC,GAAGA,KAAK,CAACwB,MAAM,GAAG,GAAG;UAChDvB,QAAQ,EAAEqB,KAAK,CAACC,OAAO,CAACtB,QAAQ,CAAC,GAAGA,QAAQ,CAACuB,MAAM,GAAG,GAAG;UACzDtB,MAAM,EAAEmB,eAAe;UACvBlB,YAAY,EAAEiB,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEK,OAAO,GAAG,aAAa,GAAG;QAClD,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;QAC5C3B,QAAQ,CAAC;UACPC,KAAK,EAAE,GAAG;UACVC,QAAQ,EAAE,GAAG;UACbC,MAAM,EAAE,GAAG;UACXC,YAAY,EAAE;QAChB,CAAC,CAAC;MACJ;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAON,KAAK;AACd;AAACD,EAAA,CAtDeD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}